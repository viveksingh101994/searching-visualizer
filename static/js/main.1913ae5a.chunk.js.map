{"version":3,"sources":["constants/constant.js","utils/utility.js","utils/math.js","redux/algorithm-selector-reducer/alogrithm-selector-types.js","redux/algorithm-selector-reducer/algorithm-selector-actions.js","redux/algorithm-actions/binary-search-actions.js","redux/algorithm-actions/jump-search-actions.js","redux/algorithm-actions/linear-search-actions.js","redux/algorithm-actions/interpolation-search.action.js","redux/algorithm-actions/exponenital-search-action.js","redux/algorithm-actions/fibonacci-search-actions.js","redux/algorithm-actions/searching-action.js","components/bar/bar.jsx","components/search-visualizer/search-visualizer.jsx","components/header/header.jsx","components/information-bar/information-bar.jsx","components/status/status.jsx","components/slider/slider.jsx","components/slider-toolbar/slider-toolbar.jsx","components/array-toolbar/array-toolbar.jsx","App.js","redux/algorithm-selector-reducer/algorithm-selector-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["ALGORITHMS_CONSTANTS","linearSearch","binarySearch","jumpSearch","interpolationSearch","exponentialSearch","fibonacciSearch","getAlgorithmsDescription","algorithm","getComplexityWithText","ALGORITHMS_DESCRIPTION","complexity","complexities","item","push","COMPLEXITY_TEXT","worst","best","average","getElementsAsPerAlgorithm","min","max","array","i","num","Math","floor","random","visited","result","sort","a","b","timer","ms","Promise","res","setTimeout","AlgorithmActionTypes","setItem","content","currentAlgo","type","payload","items","isRunning","setIsRunningStatus","elements","every","x","some","elementToSearch","dispatch","start","end","length","mid","midItem","parseInt","jumpingSize","sqrt","prev","low","high","pos","left","right","fibM","fibMMm2","fibMMm1","offset","searchElement","element","newArray","map","Bar","styled","div","backgroundColor","props","height","keyframes","BarComponent","title","onClick","className","e","connect","findElement","arr","classChart","idx","getBackgroundElement","target","setAlgoDispatch","algorithms","Navbar","bg","variant","Brand","href","Collapse","id","Nav","NavDropdown","val","Item","children","getStatusAsPerIsRunning","SliderComponent","value","step","SliderToolBarComponent","sliderName","App","Object","values","INITIAL_STATE","error","algoReducer","state","action","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1913ae5a.chunk.js","sourcesContent":["export const ALGORITHMS_CONSTANTS = {\r\n  linearSearch: 'Linear search',\r\n  binarySearch: 'Binary search',\r\n  jumpSearch: 'Jump search',\r\n  interpolationSearch: 'Interpolation search',\r\n  exponentialSearch: 'Exponential search',\r\n  fibonacciSearch: 'Fibonacci search',\r\n};\r\n\r\nexport const algorithms = () => {\r\n  return Object.values(ALGORITHMS_CONSTANTS);\r\n};\r\n\r\nexport const getAlgorithmsDescription = (algorithm) => {\r\n  switch (algorithm) {\r\n    case ALGORITHMS_CONSTANTS.binarySearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.binarySearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.jumpSearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.jumpSearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.interpolationSearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.interpolationSearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.exponentialSearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.exponentialSearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.fibonacciSearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.fibonacciSearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.linearSearch:\r\n    default:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.linearSearch.complexity\r\n      );\r\n  }\r\n};\r\n\r\nconst getComplexityWithText = (complexity) => {\r\n  let complexities = [];\r\n  for (let item in complexity) {\r\n    complexities.push(`${COMPLEXITY_TEXT[item]}: ${complexity[item]}`);\r\n  }\r\n  return complexities;\r\n};\r\n\r\nconst COMPLEXITY_TEXT = {\r\n  worst: 'WORST CASE PERFORMANCE',\r\n  best: 'BEST CASE PERFORMANCE',\r\n  average: 'AVERAGE CASE PERFORMANCE',\r\n};\r\n\r\nconst ALGORITHMS_DESCRIPTION = {\r\n  linearSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(n/2)',\r\n    },\r\n  },\r\n  binarySearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(log n)',\r\n    },\r\n  },\r\n  jumpSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(√n)',\r\n    },\r\n  },\r\n  interpolationSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(log log n)',\r\n    },\r\n  },\r\n  exponentialSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(log n)',\r\n    },\r\n  },\r\n  fibonacciSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(log n)',\r\n    },\r\n  },\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../constants/constant';\r\nimport { randomNumberGenerator } from './math';\r\n\r\nexport const getElementsAsPerAlgorithm = (algorithm) => {\r\n  const array = [];\r\n  for (let i = 0; i <= 10; i += 1) {\r\n    array.push({\r\n      num: randomNumberGenerator(5, 500),\r\n      visited: false,\r\n      result: false,\r\n    });\r\n  }\r\n  if (algorithm !== ALGORITHMS_CONSTANTS.linearSearch) {\r\n    array.sort((a, b) => a.num - b.num);\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const timer = (ms) => new Promise((res) => setTimeout(res, ms));\r\n","export const randomNumberGenerator = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1) + min);\r\n","export const AlgorithmActionTypes = {\r\n  SET_BINARY_SEARCH: 'SET_BINARY_SEARCH',\r\n  SET_LINEAR_SEARCH: 'SET_LINEAR_SEARCH',\r\n};\r\n","import { getElementsAsPerAlgorithm } from '../../utils/utility';\r\nimport { AlgorithmActionTypes } from './alogrithm-selector-types';\r\n\r\nexport const setAlgo = (content) => {\r\n  return {\r\n    type: AlgorithmActionTypes.SET_LINEAR_SEARCH,\r\n    payload: {\r\n      items: getElementsAsPerAlgorithm(content),\r\n      currentAlgo: content,\r\n      isRunning: 0,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setItem = (content, currentAlgo) => {\r\n  return {\r\n    type: AlgorithmActionTypes.SET_LINEAR_SEARCH,\r\n    payload: {\r\n      items: [...content],\r\n      currentAlgo: currentAlgo,\r\n      isRunning: setIsRunningStatus(content),\r\n    },\r\n  };\r\n};\r\n\r\nconst setIsRunningStatus = (elements) => {\r\n  if (elements.every((x) => !x.result && !x.visited)) {\r\n    return 0;\r\n  } else if (elements.some((x) => x.result)) {\r\n    return 1;\r\n  } else if (elements.some((x) => x.visited)) {\r\n    return -1;\r\n  }\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const binarySearch = async (array, elementToSearch, dispatch) => {\r\n  let items = [...array];\r\n  let start = 0,\r\n    end = items.length - 1;\r\n  while (start <= end) {\r\n    let mid = Math.floor((start + end) / 2);\r\n    let midItem = { ...items[mid] };\r\n    midItem.visited = true;\r\n    items[mid] = midItem;\r\n    await timer(1000);\r\n    dispatch(setItem(items, ALGORITHMS_CONSTANTS.binarySearch));\r\n    if (items[mid].num === parseInt(elementToSearch)) {\r\n      midItem.result = true;\r\n      items[mid] = midItem;\r\n      await timer(1000);\r\n      dispatch(setItem(items, ALGORITHMS_CONSTANTS.binarySearch));\r\n      break;\r\n    } else if (items[mid].num < parseInt(elementToSearch)) {\r\n      start = mid + 1;\r\n    } else {\r\n      end = mid - 1;\r\n    }\r\n  }\r\n  await timer(1000);\r\n  dispatch(setItem(items, ALGORITHMS_CONSTANTS.binarySearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const jumpSearch = async (array, elementToSearch, dispatch) => {\r\n  let jumpingSize = Math.floor(Math.sqrt(array.length));\r\n  let prev = 0;\r\n  while (\r\n    array[Math.min(jumpingSize, array.length) - 1].num <\r\n    parseInt(elementToSearch)\r\n  ) {\r\n    array[Math.min(jumpingSize, array.length) - 1] = {\r\n      num: array[Math.min(jumpingSize, array.length) - 1].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    prev = jumpingSize;\r\n    jumpingSize += Math.floor(Math.sqrt(array.length));\r\n    if (prev >= jumpingSize) {\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    }\r\n  }\r\n\r\n  while (array[prev].num < parseInt(elementToSearch)) {\r\n    array[prev] = {\r\n      num: array[prev].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    prev++;\r\n    if (prev === Math.min(jumpingSize, array.length)) {\r\n      await timer(1000);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    }\r\n  }\r\n\r\n  if (array[prev].num === parseInt(elementToSearch)) {\r\n    array[prev] = {\r\n      num: array[prev].num,\r\n      visited: true,\r\n      result: true,\r\n    };\r\n  }\r\n  await timer(1000);\r\n  dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const linearSearch = async (array, elementToSearch, dispatch) => {\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (parseInt(elementToSearch) === array[i].num) {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      break;\r\n    } else {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: false,\r\n      };\r\n    }\r\n    await timer(1000);\r\n\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.linearSearch));\r\n  }\r\n  await timer(1000);\r\n\r\n  dispatch(setItem(array, ALGORITHMS_CONSTANTS.linearSearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const interpolationSearch = async (array, elementToSearch, dispatch) => {\r\n  let low = 0;\r\n  let high = array.length - 1;\r\n  while (\r\n    low <= high &&\r\n    parseInt(elementToSearch) >= array[low].num &&\r\n    parseInt(elementToSearch) <= array[high].num\r\n  ) {\r\n    array[low] = {\r\n      num: array[low].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    array[high] = {\r\n      num: array[high].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    if (low === high) {\r\n      if (array[low].num === parseInt(elementToSearch)) {\r\n        array[low] = {\r\n          num: array[low].num,\r\n          visited: true,\r\n          result: true,\r\n        };\r\n      }\r\n      await timer(1000);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    }\r\n    let pos = Math.floor(\r\n      low +\r\n        ((high - low) / (array[high].num - array[low].num)) *\r\n          (parseInt(elementToSearch) - array[low].num)\r\n    );\r\n\r\n    array[pos] = {\r\n      num: array[pos].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n\r\n    if (array[pos].num === parseInt(elementToSearch)) {\r\n      array[pos] = {\r\n        num: array[pos].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      await timer(1000);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    }\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    if (array[pos].num < parseInt(elementToSearch)) low = pos + 1;\r\n    else high = pos - 1;\r\n  }\r\n  return dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const exponentialSearch = async (array, elementToSearch, dispatch) => {\r\n  elementToSearch = parseInt(elementToSearch);\r\n  if (array[0].num === elementToSearch) {\r\n    array[0] = {\r\n      num: array[0].num,\r\n      visited: true,\r\n      result: true,\r\n    };\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.exponentialSearch));\r\n  }\r\n\r\n  // Find range for binary search by\r\n  // repeated doubling\r\n  let i = 1;\r\n  while (i < array.length && array[i].num <= elementToSearch) i = i * 2;\r\n\r\n  //  Call binary search for the found range.\r\n  await binarySearch(\r\n    array,\r\n    i / 2,\r\n    Math.min(i, array.length - 1),\r\n    elementToSearch,\r\n    dispatch\r\n  );\r\n};\r\n\r\nasync function binarySearch(array, left, right, elementToSearch, dispatch) {\r\n  if (right >= left) {\r\n    let mid = left + (right - left) / 2;\r\n\r\n    array[mid] = {\r\n      num: array[mid].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.exponentialSearch));\r\n    if (array[mid].num === elementToSearch) {\r\n      array[mid] = {\r\n        num: array[mid].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      await timer(1000);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.exponentialSearch));\r\n    }\r\n    if (array[mid].num > elementToSearch)\r\n      return binarySearch(array, left, mid - 1, elementToSearch, dispatch);\r\n    else return binarySearch(array, mid + 1, right, elementToSearch, dispatch);\r\n  }\r\n  return dispatch(setItem(array, ALGORITHMS_CONSTANTS.exponentialSearch));\r\n}\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\nexport const fibonacciSearch = async (array, elementToSearch, dispatch) => {\r\n  elementToSearch = parseInt(elementToSearch);\r\n  let fibMMm2 = 0;\r\n  let fibMMm1 = 1;\r\n  let fibM = fibMMm2 + fibMMm1;\r\n  while (fibM < elementToSearch) {\r\n    fibMMm2 = fibMMm1;\r\n    fibMMm1 = fibM;\r\n    fibM = fibMMm2 + fibMMm1;\r\n  }\r\n\r\n  let offset = -1;\r\n\r\n  while (fibM > 1) {\r\n    let i = Math.min(offset + fibMMm2, array.length - 1);\r\n    array[i] = {\r\n      num: array[i].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n\r\n    if (array[i].num < elementToSearch) {\r\n      fibM = fibMMm1;\r\n      fibMMm1 = fibMMm2;\r\n      fibMMm2 = fibM - fibMMm1;\r\n      offset = i;\r\n    } else if (array[i].num > elementToSearch) {\r\n      fibM = fibMMm2;\r\n      fibMMm1 = fibMMm1 - fibMMm2;\r\n      fibMMm2 = fibM - fibMMm1;\r\n    } else {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      await timer(1000);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.fibonacciSearch));\r\n    }\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.fibonacciSearch));\r\n  }\r\n\r\n  if (fibMMm1 && array[offset + 1].num === elementToSearch) {\r\n    array[offset + 1] = {\r\n      num: array[offset + 1].num,\r\n      visited: true,\r\n      result: true,\r\n    };\r\n    await timer(1000);\r\n    return dispatch(setItem(array, ALGORITHMS_CONSTANTS.fibonacciSearch));\r\n  }\r\n\r\n  dispatch(setItem(array, ALGORITHMS_CONSTANTS.fibonacciSearch));\r\n};\r\n","import { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\nimport { Algorithms } from '../algorithm-selector-reducer/alogrithm-selector-types';\r\nimport { binarySearch } from './binary-search-actions';\r\nimport { jumpSearch } from './jump-search-actions';\r\nimport { linearSearch } from './linear-search-actions';\r\nimport { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { interpolationSearch } from './interpolation-search.action';\r\nimport { exponentialSearch } from './exponenital-search-action';\r\nimport { fibonacciSearch } from './fibonacci-search-actions';\r\nexport const searchElement = (array, element, dispatch, type) => {\r\n  let newArray = array.map((item) => ({\r\n    num: item.num,\r\n    visited: false,\r\n    result: false,\r\n  }));\r\n  dispatch(setItem(newArray, type));\r\n  if (type === ALGORITHMS_CONSTANTS.linearSearch) {\r\n    linearSearch(newArray, element, dispatch);\r\n  } else if (type === ALGORITHMS_CONSTANTS.binarySearch) {\r\n    binarySearch(newArray, element, dispatch);\r\n  } else if (type === ALGORITHMS_CONSTANTS.jumpSearch) {\r\n    jumpSearch(newArray, element, dispatch);\r\n  } else if (type === ALGORITHMS_CONSTANTS.interpolationSearch) {\r\n    interpolationSearch(newArray, element, dispatch);\r\n  } else if (type === ALGORITHMS_CONSTANTS.exponentialSearch) {\r\n    exponentialSearch(newArray, element, dispatch);\r\n  } else {\r\n    fibonacciSearch(newArray, element, dispatch);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst increasingHeightKeyFrame = (height) => keyframes`\r\n    0% { height: 0px; }\r\n    100% { height: ${height}px }\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  grid-row-start: 1;\r\n  grid-row-end: 75;\r\n  border-radius: 5px 5px 5px 5px;\r\n  padding-top: 7px;\r\n  font-family: sans-serif;\r\n  font-weight: 100;\r\n  display: inline-block;\r\n  color: transparent;\r\n  background-color: ${({ backgroundColor }) => backgroundColor};\r\n  height: ${(props) => props.height + 'px'};\r\n  animation: ${(props) => increasingHeightKeyFrame(props.height)};\r\n  animation-duration: 1s;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst BarComponent = ({ title, height, backgroundColor, onClick, ...s }) => {\r\n  return (\r\n    <Bar\r\n      className=\"transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110\"\r\n      title={title}\r\n      height={height}\r\n      backgroundColor={backgroundColor}\r\n      onClick={(e) => onClick(e)}\r\n    ></Bar>\r\n  );\r\n};\r\n\r\nexport default BarComponent;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchElement } from '../../redux/algorithm-actions/searching-action';\r\nimport BarComponent from '../bar/bar';\r\n\r\nconst getBackgroundElement = (visited, result) => {\r\n  if (visited && result) {\r\n    return '#8bcf0c';\r\n  }\r\n  if (visited) {\r\n    return '#0c9ecf';\r\n  }\r\n  return '#181e54';\r\n};\r\n\r\nconst SearchVisualizer = ({ items, findElement, currentAlgo }) => {\r\n  const classChart = `grid grid-cols-${items.length - 1} gap-2`;\r\n  return (\r\n    <div className={classChart}>\r\n      {items.map(({ num, visited, result }, idx) => {\r\n        const backgroundColor = getBackgroundElement(visited, result);\r\n        return (\r\n          <BarComponent\r\n            key={idx}\r\n            title={num}\r\n            height={num}\r\n            backgroundColor={backgroundColor}\r\n            onClick={(e) => findElement(e.target.title, items, currentAlgo)}\r\n          >\r\n            {num}\r\n          </BarComponent>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProp = ({ algorithm: { currentAlgo, items } }) => {\r\n  return {\r\n    currentAlgo,\r\n    items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToPros = () => (dispatch) => ({\r\n  findElement: async (element, arr, currentAlgo) =>\r\n    await searchElement(arr, element, dispatch, currentAlgo),\r\n});\r\nexport default connect(mapStateToProp, mapDispatchToPros)(SearchVisualizer);\r\n","import React from 'react';\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux';\r\nimport { setAlgo } from '../../redux/algorithm-selector-reducer/algorithm-selector-actions';\r\nconst HeaderComponent = ({ algorithms, setAlgoDispatch }) => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Searching Algo-visualizer</Navbar.Brand>\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title=\"Select Algorithm\" id=\"collasible-nav-dropdown\">\r\n            {algorithms.map((val, idx) => (\r\n              <NavDropdown.Item key={idx} title={val} onClick={setAlgoDispatch}>\r\n                {val}\r\n              </NavDropdown.Item>\r\n            ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToPros = () => (dispatch) => ({\r\n  setAlgoDispatch: (e) => dispatch(setAlgo(e.target.title)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToPros)(HeaderComponent);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAlgorithmsDescription } from '../../constants/constant';\r\n\r\nconst InformationBarComponent = ({ currentAlgo, children, complexity }) => {\r\n  return (\r\n    <div className=\"border mt-3\">\r\n      <div className=\"p-4\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <h5 className=\"text-lg text-gray-500 font-bold tracking-widest mb-2 uppercase text-left\">\r\n              {currentAlgo}\r\n            </h5>\r\n          </div>\r\n          <div className=\"grid-rows-3\">\r\n            {getAlgorithmsDescription(currentAlgo).map((item, idx) => (\r\n              <div key={idx}>\r\n                <h5 className=\"text-lg text-gray-500 font-bold tracking-widest mb-2 text-right\">\r\n                  {item}\r\n                </h5>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProp = ({ algorithm: { currentAlgo } }) => {\r\n  return { currentAlgo };\r\n};\r\n\r\nexport default connect(mapStateToProp, null)(InformationBarComponent);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nconst StatusComponent = ({ isRunning }) => {\r\n  return (\r\n    <span className=\"relative inline-flex rounded-md shadow-sm\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"inline-flex items-center px-4 py-2 border border-purple-400 text-base leading-6 font-medium rounded-md text-purple-800 bg-white hover:text-purple-700 focus:border-purple-300 transition ease-in-out duration-150\"\r\n      >\r\n        {getStatusAsPerIsRunning(isRunning)}\r\n      </button>\r\n      {isRunning === -1 ? (\r\n        <span className=\"flex absolute h-3 w-3 top-0 right-0 -mt-1 -mr-1\">\r\n          <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-purple-400 opacity-75\"></span>\r\n          <span className=\"relative inline-flex rounded-full h-3 w-3 bg-purple-500\"></span>\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst getStatusAsPerIsRunning = (isRunning) => {\r\n  if (isRunning === 0) {\r\n    return 'Select an item';\r\n  } else if (isRunning === 1) {\r\n    return 'Item found';\r\n  } else if (isRunning === -1) {\r\n    return 'Searching';\r\n  }\r\n};\r\n\r\nconst mapStateToProp = ({ algorithm: { isRunning } }) => {\r\n  return {\r\n    isRunning,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProp, null)(StatusComponent);\r\n","import React from 'react';\r\n\r\nconst SliderComponent = ({ min, max, value }) => {\r\n  return (\r\n    <p className=\"range-field\">\r\n      <input type=\"range\" min={min} step=\"1\" max={max} />\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default SliderComponent;\r\n","import React from 'react';\r\nimport SliderComponent from '../slider/slider';\r\n\r\nconst SliderToolBarComponent = ({ max, min, sliderName }) => {\r\n  return (\r\n    <div className=\"grid-rows-2\">\r\n      <div>{sliderName}</div>\r\n      <div>\r\n        <SliderComponent max={max} min={min} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderToolBarComponent;\r\n","import React from 'react';\r\nimport SliderToolBarComponent from '../slider-toolbar/slider-toolbar';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ArrayToolBarComponent = () => {\r\n  return (\r\n    <div className=\"grid grid-cols-2\">\r\n      <SliderToolBarComponent\r\n        sliderName=\"Change Array Size\"\r\n        max=\"100\"\r\n        min=\"10\"\r\n      />\r\n      <SliderToolBarComponent sliderName=\"Speed\" max=\"3\" min=\"1\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, null)(ArrayToolBarComponent);\r\n","import './App.css';\nimport React from 'react';\nimport SearchVisualizer from './components/search-visualizer/search-visualizer';\nimport HeaderComponent from './components/header/header';\nimport { algorithms } from './constants/constant';\nimport InformationBarComponent from './components/information-bar/information-bar';\nimport StatusComponent from './components/status/status';\nimport ArrayToolBarComponent from './components/array-toolbar/array-toolbar';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderComponent algorithms={algorithms()} />\n      <div className=\"container\">\n        <ArrayToolBarComponent />\n        <InformationBarComponent>\n          <SearchVisualizer />\n          <StatusComponent />\n        </InformationBarComponent>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { getElementsAsPerAlgorithm } from '../../utils/utility';\r\nimport { AlgorithmActionTypes } from './alogrithm-selector-types';\r\n\r\nconst INITIAL_STATE = {\r\n  currentAlgo: ALGORITHMS_CONSTANTS.linearSearch,\r\n  error: null,\r\n  items: getElementsAsPerAlgorithm('linear-search'),\r\n  isRunning: 0,\r\n};\r\n\r\nconst algoReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case AlgorithmActionTypes.SET_BINARY_SEARCH:\r\n    case AlgorithmActionTypes.SET_LINEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        items: action.payload.items,\r\n        currentAlgo: action.payload.currentAlgo,\r\n        isRunning: action.payload.isRunning,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default algoReducer;\r\n","import { combineReducers } from 'redux';\r\nimport algoReducer from './algorithm-selector-reducer/algorithm-selector-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  algorithm: algoReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import logger from 'redux-logger';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './root-reducer';\r\nimport thunk from 'redux-thunk';\r\nlet middlewares = [thunk];\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}