{"version":3,"sources":["constants/constant.js","utils/utility.js","utils/math.js","redux/algorithm-selector-reducer/alogrithm-selector-types.js","redux/algorithm-selector-reducer/algorithm-selector-actions.js","redux/algorithm-actions/binary-search-actions.js","redux/algorithm-actions/jump-search-actions.js","redux/algorithm-actions/linear-search-actions.js","redux/algorithm-actions/interpolation-search.action.js","redux/algorithm-actions/searching-action.js","components/search-visualizer/search-visualizer.jsx","components/header/header.jsx","App.js","redux/algorithm-selector-reducer/algorithm-selector-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["ALGORITHMS_CONSTANTS","linearSearch","binarySearch","jumpSearch","interpolationSearch","getElementsAsPerAlgorithm","algorithm","min","max","array","i","push","num","Math","floor","random","visited","result","sort","a","b","timer","ms","Promise","res","setTimeout","AlgorithmActionTypes","setItem","content","currentAlgo","type","payload","items","elementToSearch","dispatch","start","end","length","mid","midItem","parseInt","jumpingSize","sqrt","prev","low","high","pos","searchElement","element","newArray","map","item","connect","findElement","arr","console","log","className","idx","backgroundColor","getBackgroundElement","title","style","height","cursor","onClick","e","target","setAlgoDispatch","algorithms","Navbar","bg","variant","Brand","href","Collapse","id","Nav","NavDropdown","val","Item","App","Object","values","INITIAL_STATE","error","algoReducer","state","action","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00a593de.chunk.js","sourcesContent":["export const ALGORITHMS_CONSTANTS = {\r\n  linearSearch: 'linear-search',\r\n  binarySearch: 'binary-search',\r\n  jumpSearch: 'jump-search',\r\n  interpolationSearch: 'interpolation-search',\r\n};\r\n\r\nexport const algorithms = () => {\r\n  return Object.values(ALGORITHMS_CONSTANTS);\r\n};\r\n","import { algorithms, ALGORITHMS_CONSTANTS } from '../constants/constant';\r\nimport { randomNumberGenerator } from './math';\r\n\r\nexport const getElementsAsPerAlgorithm = (algorithm) => {\r\n  const array = [];\r\n  for (let i = 0; i <= 10; i += 1) {\r\n    array.push({\r\n      num: randomNumberGenerator(5, 500),\r\n      visited: false,\r\n      result: false,\r\n    });\r\n  }\r\n  if (\r\n    algorithm === ALGORITHMS_CONSTANTS.binarySearch ||\r\n    algorithm === ALGORITHMS_CONSTANTS.jumpSearch ||\r\n    algorithm === ALGORITHMS_CONSTANTS.interpolationSearch\r\n  ) {\r\n    array.sort((a, b) => a.num - b.num);\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const timer = (ms) => new Promise((res) => setTimeout(res, ms));\r\n","export const randomNumberGenerator = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1) + min);\r\n","export const AlgorithmActionTypes = {\r\n  SET_BINARY_SEARCH: 'SET_BINARY_SEARCH',\r\n  SET_LINEAR_SEARCH: 'SET_LINEAR_SEARCH',\r\n};\r\n","import { getElementsAsPerAlgorithm } from '../../utils/utility';\r\nimport { AlgorithmActionTypes } from './alogrithm-selector-types';\r\n\r\nexport const setAlgo = (content) => {\r\n  return {\r\n    type: AlgorithmActionTypes.SET_LINEAR_SEARCH,\r\n    payload: {\r\n      items: getElementsAsPerAlgorithm(content),\r\n      currentAlgo: content,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setItem = (content, currentAlgo) => {\r\n  return {\r\n    type: AlgorithmActionTypes.SET_LINEAR_SEARCH,\r\n    payload: {\r\n      items: [...content],\r\n      currentAlgo: currentAlgo,\r\n    },\r\n  };\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const binarySearch = async (array, elementToSearch, dispatch) => {\r\n  let items = [...array];\r\n  let start = 0,\r\n    end = items.length - 1;\r\n  while (start <= end) {\r\n    let mid = Math.floor((start + end) / 2);\r\n    let midItem = { ...items[mid] };\r\n    midItem.visited = true;\r\n    items[mid] = midItem;\r\n    await timer(1000);\r\n    dispatch(setItem(items, ALGORITHMS_CONSTANTS.binarySearch));\r\n    if (items[mid].num === parseInt(elementToSearch)) {\r\n      midItem.result = true;\r\n      items[mid] = midItem;\r\n      await timer(1000);\r\n      dispatch(setItem(items, ALGORITHMS_CONSTANTS.binarySearch));\r\n      break;\r\n    } else if (items[mid].num < parseInt(elementToSearch)) {\r\n      start = mid + 1;\r\n    } else {\r\n      end = mid - 1;\r\n    }\r\n  }\r\n  await timer(1000);\r\n  dispatch(setItem(items, ALGORITHMS_CONSTANTS.binarySearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const jumpSearch = async (array, elementToSearch, dispatch) => {\r\n  let jumpingSize = Math.floor(Math.sqrt(array.length));\r\n  let prev = 0;\r\n  while (\r\n    array[Math.min(jumpingSize, array.length) - 1].num <\r\n    parseInt(elementToSearch)\r\n  ) {\r\n    array[Math.min(jumpingSize, array.length) - 1] = {\r\n      num: array[Math.min(jumpingSize, array.length) - 1].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    prev = jumpingSize;\r\n    jumpingSize += Math.floor(Math.sqrt(array.length));\r\n    if (prev >= jumpingSize) {\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    }\r\n  }\r\n\r\n  while (array[prev].num < parseInt(elementToSearch)) {\r\n    array[prev] = {\r\n      num: array[prev].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    prev++;\r\n    if (prev === Math.min(jumpingSize, array.length)) {\r\n      await timer(1000);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    }\r\n  }\r\n\r\n  if (array[prev].num === parseInt(elementToSearch)) {\r\n    array[prev] = {\r\n      num: array[prev].num,\r\n      visited: true,\r\n      result: true,\r\n    };\r\n  }\r\n  await timer(1000);\r\n  dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const linearSearch = async (array, elementToSearch, dispatch) => {\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (parseInt(elementToSearch) === array[i].num) {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      break;\r\n    } else {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: false,\r\n      };\r\n    }\r\n    await timer(1000);\r\n\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.linearSearch));\r\n  }\r\n  await timer(1000);\r\n\r\n  dispatch(setItem(array, ALGORITHMS_CONSTANTS.linearSearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const interpolationSearch = async (array, elementToSearch, dispatch) => {\r\n  let low = 0;\r\n  let high = array.length - 1;\r\n  while (\r\n    low <= high &&\r\n    parseInt(elementToSearch) >= array[low].num &&\r\n    parseInt(elementToSearch) <= array[high].num\r\n  ) {\r\n    array[low] = {\r\n      num: array[low].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    array[high] = {\r\n      num: array[high].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    if (low === high) {\r\n      if (array[low].num === parseInt(elementToSearch)) {\r\n        array[low] = {\r\n          num: array[low].num,\r\n          visited: true,\r\n          result: true,\r\n        };\r\n      }\r\n      await timer(1000);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    }\r\n    let pos = Math.floor(\r\n      low +\r\n        ((high - low) / (array[high].num - array[low].num)) *\r\n          (parseInt(elementToSearch) - array[low].num)\r\n    );\r\n\r\n    array[pos] = {\r\n      num: array[pos].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n\r\n    if (array[pos].num === parseInt(elementToSearch)) {\r\n      array[pos] = {\r\n        num: array[pos].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      await timer(1000);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    }\r\n    await timer(1000);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    if (array[pos].num < parseInt(elementToSearch)) low = pos + 1;\r\n    else high = pos - 1;\r\n  }\r\n  return dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n};\r\n","import { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\nimport { Algorithms } from '../algorithm-selector-reducer/alogrithm-selector-types';\r\nimport { binarySearch } from './binary-search-actions';\r\nimport { jumpSearch } from './jump-search-actions';\r\nimport { linearSearch } from './linear-search-actions';\r\nimport { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { interpolationSearch } from './interpolation-search.action';\r\nexport const searchElement = (array, element, dispatch, type) => {\r\n  let newArray = array.map((item) => ({\r\n    num: item.num,\r\n    visited: false,\r\n    result: false,\r\n  }));\r\n  dispatch(setItem(newArray, type));\r\n  if (type === ALGORITHMS_CONSTANTS.linearSearch) {\r\n    linearSearch(newArray, element, dispatch);\r\n  } else if (type === ALGORITHMS_CONSTANTS.binarySearch) {\r\n    binarySearch(newArray, element, dispatch);\r\n  } else if (type === ALGORITHMS_CONSTANTS.jumpSearch) {\r\n    jumpSearch(newArray, element, dispatch);\r\n  } else if (type === ALGORITHMS_CONSTANTS.interpolationSearch) {\r\n    interpolationSearch(newArray, element, dispatch);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './search-visualizer.css';\r\nimport { connect } from 'react-redux';\r\nimport { searchElement } from '../../redux/algorithm-actions/searching-action';\r\n\r\nconst getBackgroundElement = (visited, result) => {\r\n  if (visited && result) {\r\n    return '#8bcf0c';\r\n  }\r\n  if (visited) {\r\n    return '#0c9ecf';\r\n  }\r\n  return '#181e54';\r\n};\r\n\r\nconst SearchVisualizer = ({ items, findElement, currentAlgo }) => {\r\n  console.log(items);\r\n  return (\r\n    <div>\r\n      <div className=\"chart\">\r\n        {items.map(({ num, visited, result }, idx) => {\r\n          const backgroundColor = getBackgroundElement(visited, result);\r\n          return (\r\n            <div\r\n              key={idx}\r\n              className=\"bar\"\r\n              title={num}\r\n              style={{\r\n                height: `${num}px`,\r\n                backgroundColor,\r\n                cursor: 'pointer',\r\n              }}\r\n              onClick={(e) => findElement(e.target.title, items, currentAlgo)}\r\n            >\r\n              {num}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProp = ({ algorithm: { currentAlgo, items } }) => {\r\n  return {\r\n    currentAlgo,\r\n    items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToPros = () => (dispatch) => ({\r\n  findElement: async (element, arr, currentAlgo) =>\r\n    await searchElement(arr, element, dispatch, currentAlgo),\r\n});\r\nexport default connect(mapStateToProp, mapDispatchToPros)(SearchVisualizer);\r\n","import React from 'react';\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux';\r\nimport { setAlgo } from '../../redux/algorithm-selector-reducer/algorithm-selector-actions';\r\nconst HeaderComponent = ({ algorithms, setAlgoDispatch }) => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Searching Algo-visualizer</Navbar.Brand>\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title=\"Select Algorithm\" id=\"collasible-nav-dropdown\">\r\n            {algorithms.map((val, idx) => (\r\n              <NavDropdown.Item key={idx} title={val} onClick={setAlgoDispatch}>\r\n                {val}\r\n              </NavDropdown.Item>\r\n            ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToPros = () => (dispatch) => ({\r\n  setAlgoDispatch: (e) => dispatch(setAlgo(e.target.title)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToPros)(HeaderComponent);\r\n","import './App.css';\nimport React from 'react';\nimport SearchVisualizer from './components/search-visualizer/search-visualizer';\nimport HeaderComponent from './components/header/header';\nimport { algorithms } from './constants/constant';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderComponent algorithms={algorithms()} />\n      <SearchVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { getElementsAsPerAlgorithm } from '../../utils/utility';\r\nimport { AlgorithmActionTypes } from './alogrithm-selector-types';\r\n\r\nconst INITIAL_STATE = {\r\n  currentAlgo: ALGORITHMS_CONSTANTS.linearSearch,\r\n  error: null,\r\n  items: getElementsAsPerAlgorithm('linear-search'),\r\n};\r\n\r\nconst algoReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case AlgorithmActionTypes.SET_BINARY_SEARCH:\r\n    case AlgorithmActionTypes.SET_LINEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        items: action.payload.items,\r\n        currentAlgo: action.payload.currentAlgo,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default algoReducer;\r\n","import { combineReducers } from 'redux';\r\nimport algoReducer from './algorithm-selector-reducer/algorithm-selector-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  algorithm: algoReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import logger from 'redux-logger';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './root-reducer';\r\nimport thunk from 'redux-thunk';\r\nlet middlewares = [thunk];\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}