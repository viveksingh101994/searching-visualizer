{"version":3,"sources":["constants/constant.js","utils/math.js","utils/utility.js","redux/algorithm-selector-reducer/algorithm-selector-types.js","redux/algorithm-selector-reducer/algorithm-selector-actions.js","redux/algorithm-actions/binary-search-actions.js","redux/algorithm-actions/jump-search-actions.js","redux/algorithm-actions/linear-search-actions.js","redux/algorithm-actions/interpolation-search.action.js","redux/algorithm-actions/exponenital-search-action.js","redux/algorithm-actions/fibonacci-search-actions.js","redux/algorithm-actions/searching-action.js","components/bar/bar.jsx","components/search-visualizer/search-visualizer.jsx","components/header/header.jsx","components/information-bar/information-bar.jsx","components/status/status.jsx","components/slider/slider.jsx","components/slider-toolbar/slider-toolbar.jsx","redux/array/array-types.js","components/array-toolbar/array-toolbar.jsx","redux/array/array-actions.js","App.js","redux/algorithm-selector-reducer/algorithm-selector-reducer.js","redux/array/array-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["ALGORITHMS_CONSTANTS","linearSearch","binarySearch","jumpSearch","interpolationSearch","exponentialSearch","fibonacciSearch","getAlgorithmsDescription","algorithm","getComplexityWithText","ALGORITHMS_DESCRIPTION","complexity","complexities","item","push","COMPLEXITY_TEXT","worst","best","average","randomNumberGenerator","min","max","Math","floor","random","getElementsAsPerAlgorithm","arrayLength","array","i","num","visited","result","sort","a","b","timer","ms","Promise","res","setTimeout","AlgorithmActionTypes","setItem","content","currentAlgo","type","payload","items","isRunning","setIsRunningStatus","elements","every","x","some","elementToSearch","dispatch","operationSpeed","start","end","length","mid","midItem","parseInt","jumpingSize","sqrt","prev","low","high","pos","left","right","fibM","fibMMm2","fibMMm1","offset","searchElement","element","newArray","map","Bar","styled","div","backgroundColor","props","height","keyframes","BarComponent","title","onClick","className","e","connect","operation","findElement","arr","classChart","idx","getBackgroundElement","target","setAlgoDispatch","setAlgo","algorithms","Navbar","bg","variant","Brand","href","Collapse","id","Nav","NavDropdown","val","Item","children","getStatusAsPerIsRunning","SliderComponent","value","onChange","step","SliderToolBarComponent","sliderName","ArrayActionTypes","dispatchArrayLength","dispatchOperationSpeed","App","Object","values","INITIAL_STATE","error","algoReducer","state","action","arrayReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c1d348c.chunk.js","sourcesContent":["export const ALGORITHMS_CONSTANTS = {\r\n  linearSearch: 'Linear search',\r\n  binarySearch: 'Binary search',\r\n  jumpSearch: 'Jump search',\r\n  interpolationSearch: 'Interpolation search',\r\n  exponentialSearch: 'Exponential search',\r\n  fibonacciSearch: 'Fibonacci search',\r\n};\r\n\r\nexport const algorithms = () => {\r\n  return Object.values(ALGORITHMS_CONSTANTS);\r\n};\r\n\r\nexport const getAlgorithmsDescription = (algorithm) => {\r\n  switch (algorithm) {\r\n    case ALGORITHMS_CONSTANTS.binarySearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.binarySearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.jumpSearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.jumpSearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.interpolationSearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.interpolationSearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.exponentialSearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.exponentialSearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.fibonacciSearch:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.fibonacciSearch.complexity\r\n      );\r\n    case ALGORITHMS_CONSTANTS.linearSearch:\r\n    default:\r\n      return getComplexityWithText(\r\n        ALGORITHMS_DESCRIPTION.linearSearch.complexity\r\n      );\r\n  }\r\n};\r\n\r\nconst getComplexityWithText = (complexity) => {\r\n  let complexities = [];\r\n  for (let item in complexity) {\r\n    complexities.push(`${COMPLEXITY_TEXT[item]}: ${complexity[item]}`);\r\n  }\r\n  return complexities;\r\n};\r\n\r\nconst COMPLEXITY_TEXT = {\r\n  worst: 'WORST CASE PERFORMANCE',\r\n  best: 'BEST CASE PERFORMANCE',\r\n  average: 'AVERAGE CASE PERFORMANCE',\r\n};\r\n\r\nconst ALGORITHMS_DESCRIPTION = {\r\n  linearSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(n/2)',\r\n    },\r\n  },\r\n  binarySearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(log n)',\r\n    },\r\n  },\r\n  jumpSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(√n)',\r\n    },\r\n  },\r\n  interpolationSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(log log n)',\r\n    },\r\n  },\r\n  exponentialSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(log n)',\r\n    },\r\n  },\r\n  fibonacciSearch: {\r\n    complexity: {\r\n      worst: 'O(1)',\r\n      best: 'O(1)',\r\n      average: 'O(log n)',\r\n    },\r\n  },\r\n};\r\n","export const randomNumberGenerator = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1) + min);\r\n","import { ALGORITHMS_CONSTANTS } from '../constants/constant';\r\nimport { randomNumberGenerator } from './math';\r\n\r\nexport const getElementsAsPerAlgorithm = (algorithm, arrayLength = 10) => {\r\n  const array = [];\r\n  for (let i = 0; i < arrayLength; i += 1) {\r\n    array.push({\r\n      num: randomNumberGenerator(5, 500),\r\n      visited: false,\r\n      result: false,\r\n    });\r\n  }\r\n  if (algorithm !== ALGORITHMS_CONSTANTS.linearSearch) {\r\n    array.sort((a, b) => a.num - b.num);\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const timer = (ms) =>\r\n  new Promise((res) => setTimeout(res, (ms < 0 ? ms * -1 : ms) * 500));\r\n","export const AlgorithmActionTypes = {\r\n  SET_BINARY_SEARCH: 'SET_BINARY_SEARCH',\r\n  SET_LINEAR_SEARCH: 'SET_LINEAR_SEARCH',\r\n};\r\n","import { getElementsAsPerAlgorithm } from '../../utils/utility';\r\nimport { AlgorithmActionTypes } from './algorithm-selector-types';\r\n\r\nexport const setAlgo = (content, arrayLength) => {\r\n  return {\r\n    type: AlgorithmActionTypes.SET_LINEAR_SEARCH,\r\n    payload: {\r\n      items: getElementsAsPerAlgorithm(content, arrayLength),\r\n      currentAlgo: content,\r\n      isRunning: 0,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setItem = (content, currentAlgo) => {\r\n  return {\r\n    type: AlgorithmActionTypes.SET_LINEAR_SEARCH,\r\n    payload: {\r\n      items: [...content],\r\n      currentAlgo: currentAlgo,\r\n      isRunning: setIsRunningStatus(content),\r\n    },\r\n  };\r\n};\r\n\r\nconst setIsRunningStatus = (elements) => {\r\n  if (elements.every((x) => !x.result && !x.visited)) {\r\n    return 0;\r\n  } else if (elements.some((x) => x.result)) {\r\n    return 1;\r\n  } else if (elements.some((x) => x.visited)) {\r\n    return -1;\r\n  }\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const binarySearch = async (\r\n  array,\r\n  elementToSearch,\r\n  dispatch,\r\n  operationSpeed\r\n) => {\r\n  let items = [...array];\r\n  let start = 0,\r\n    end = items.length - 1;\r\n  while (start <= end) {\r\n    let mid = Math.floor((start + end) / 2);\r\n    let midItem = { ...items[mid] };\r\n    midItem.visited = true;\r\n    items[mid] = midItem;\r\n    await timer(operationSpeed);\r\n    dispatch(setItem(items, ALGORITHMS_CONSTANTS.binarySearch));\r\n    if (items[mid].num === parseInt(elementToSearch)) {\r\n      midItem.result = true;\r\n      items[mid] = midItem;\r\n      await timer(operationSpeed);\r\n      dispatch(setItem(items, ALGORITHMS_CONSTANTS.binarySearch));\r\n      break;\r\n    } else if (items[mid].num < parseInt(elementToSearch)) {\r\n      start = mid + 1;\r\n    } else {\r\n      end = mid - 1;\r\n    }\r\n  }\r\n  await timer(operationSpeed);\r\n  dispatch(setItem(items, ALGORITHMS_CONSTANTS.binarySearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const jumpSearch = async (\r\n  array,\r\n  elementToSearch,\r\n  dispatch,\r\n  operationSpeed\r\n) => {\r\n  let jumpingSize = Math.floor(Math.sqrt(array.length));\r\n  let prev = 0;\r\n  while (\r\n    array[Math.min(jumpingSize, array.length) - 1].num <\r\n    parseInt(elementToSearch)\r\n  ) {\r\n    array[Math.min(jumpingSize, array.length) - 1] = {\r\n      num: array[Math.min(jumpingSize, array.length) - 1].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(operationSpeed);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    prev = jumpingSize;\r\n    jumpingSize += Math.floor(Math.sqrt(array.length));\r\n    if (prev >= jumpingSize) {\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    }\r\n  }\r\n\r\n  while (array[prev].num < parseInt(elementToSearch)) {\r\n    array[prev] = {\r\n      num: array[prev].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(operationSpeed);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    prev++;\r\n    if (prev === Math.min(jumpingSize, array.length)) {\r\n      await timer(operationSpeed);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n    }\r\n  }\r\n\r\n  if (array[prev].num === parseInt(elementToSearch)) {\r\n    array[prev] = {\r\n      num: array[prev].num,\r\n      visited: true,\r\n      result: true,\r\n    };\r\n  }\r\n  await timer(operationSpeed);\r\n  dispatch(setItem(array, ALGORITHMS_CONSTANTS.jumpSearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const linearSearch = async (\r\n  array,\r\n  elementToSearch,\r\n  dispatch,\r\n  operationSpeed\r\n) => {\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (parseInt(elementToSearch) === array[i].num) {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      break;\r\n    } else {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: false,\r\n      };\r\n    }\r\n    await timer(operationSpeed);\r\n\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.linearSearch));\r\n  }\r\n  await timer(operationSpeed);\r\n\r\n  dispatch(setItem(array, ALGORITHMS_CONSTANTS.linearSearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const interpolationSearch = async (\r\n  array,\r\n  elementToSearch,\r\n  dispatch,\r\n  operationSpeed\r\n) => {\r\n  let low = 0;\r\n  let high = array.length - 1;\r\n  while (\r\n    low <= high &&\r\n    parseInt(elementToSearch) >= array[low].num &&\r\n    parseInt(elementToSearch) <= array[high].num\r\n  ) {\r\n    array[low] = {\r\n      num: array[low].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    array[high] = {\r\n      num: array[high].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(operationSpeed);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    if (low === high) {\r\n      if (array[low].num === parseInt(elementToSearch)) {\r\n        array[low] = {\r\n          num: array[low].num,\r\n          visited: true,\r\n          result: true,\r\n        };\r\n      }\r\n      await timer(operationSpeed);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    }\r\n    let pos = Math.floor(\r\n      low +\r\n        ((high - low) / (array[high].num - array[low].num)) *\r\n          (parseInt(elementToSearch) - array[low].num)\r\n    );\r\n\r\n    array[pos] = {\r\n      num: array[pos].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n\r\n    if (array[pos].num === parseInt(elementToSearch)) {\r\n      array[pos] = {\r\n        num: array[pos].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      await timer(operationSpeed);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    }\r\n    await timer(operationSpeed);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n    if (array[pos].num < parseInt(elementToSearch)) low = pos + 1;\r\n    else high = pos - 1;\r\n  }\r\n  return dispatch(setItem(array, ALGORITHMS_CONSTANTS.interpolationSearch));\r\n};\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\n\r\nexport const exponentialSearch = async (\r\n  array,\r\n  elementToSearch,\r\n  dispatch,\r\n  operationSpeed\r\n) => {\r\n  elementToSearch = parseInt(elementToSearch);\r\n  if (array[0].num === elementToSearch) {\r\n    array[0] = {\r\n      num: array[0].num,\r\n      visited: true,\r\n      result: true,\r\n    };\r\n    await timer(operationSpeed);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.exponentialSearch));\r\n  }\r\n\r\n  // Find range for binary search by\r\n  // repeated doubling\r\n  let i = 1;\r\n  while (i < array.length && array[i].num <= elementToSearch) i = i * 2;\r\n\r\n  //  Call binary search for the found range.\r\n  await binarySearch(\r\n    array,\r\n    i / 2,\r\n    Math.min(i, array.length - 1),\r\n    elementToSearch,\r\n    dispatch,\r\n    operationSpeed\r\n  );\r\n};\r\n\r\nasync function binarySearch(\r\n  array,\r\n  left,\r\n  right,\r\n  elementToSearch,\r\n  dispatch,\r\n  operationSpeed\r\n) {\r\n  if (right >= left) {\r\n    let mid = Math.floor(left + (right - left) / 2);\r\n    array[mid] = {\r\n      num: array[mid].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n    await timer(operationSpeed);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.exponentialSearch));\r\n    if (array[mid].num === elementToSearch) {\r\n      array[mid] = {\r\n        num: array[mid].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      await timer(operationSpeed);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.exponentialSearch));\r\n    }\r\n    if (array[mid].num > elementToSearch)\r\n      return binarySearch(array, left, mid - 1, elementToSearch, dispatch);\r\n    else return binarySearch(array, mid + 1, right, elementToSearch, dispatch);\r\n  }\r\n  return dispatch(setItem(array, ALGORITHMS_CONSTANTS.exponentialSearch));\r\n}\r\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\nexport const fibonacciSearch = async (\r\n  array,\r\n  elementToSearch,\r\n  dispatch,\r\n  operationSpeed\r\n) => {\r\n  elementToSearch = parseInt(elementToSearch);\r\n  let fibMMm2 = 0;\r\n  let fibMMm1 = 1;\r\n  let fibM = fibMMm2 + fibMMm1;\r\n  while (fibM < elementToSearch) {\r\n    fibMMm2 = fibMMm1;\r\n    fibMMm1 = fibM;\r\n    fibM = fibMMm2 + fibMMm1;\r\n  }\r\n\r\n  let offset = -1;\r\n\r\n  while (fibM > 1) {\r\n    let i = Math.min(offset + fibMMm2, array.length - 1);\r\n    array[i] = {\r\n      num: array[i].num,\r\n      visited: true,\r\n      result: false,\r\n    };\r\n\r\n    if (array[i].num < elementToSearch) {\r\n      fibM = fibMMm1;\r\n      fibMMm1 = fibMMm2;\r\n      fibMMm2 = fibM - fibMMm1;\r\n      offset = i;\r\n    } else if (array[i].num > elementToSearch) {\r\n      fibM = fibMMm2;\r\n      fibMMm1 = fibMMm1 - fibMMm2;\r\n      fibMMm2 = fibM - fibMMm1;\r\n    } else {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      await timer(operationSpeed);\r\n      return dispatch(setItem(array, ALGORITHMS_CONSTANTS.fibonacciSearch));\r\n    }\r\n    await timer(operationSpeed);\r\n    dispatch(setItem(array, ALGORITHMS_CONSTANTS.fibonacciSearch));\r\n  }\r\n\r\n  if (fibMMm1 && array[offset + 1].num === elementToSearch) {\r\n    array[offset + 1] = {\r\n      num: array[offset + 1].num,\r\n      visited: true,\r\n      result: true,\r\n    };\r\n    await timer(operationSpeed);\r\n    return dispatch(setItem(array, ALGORITHMS_CONSTANTS.fibonacciSearch));\r\n  }\r\n\r\n  dispatch(setItem(array, ALGORITHMS_CONSTANTS.fibonacciSearch));\r\n};\r\n","import { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\nimport { Algorithms } from '../algorithm-selector-reducer/algorithm-selector-types';\r\nimport { binarySearch } from './binary-search-actions';\r\nimport { jumpSearch } from './jump-search-actions';\r\nimport { linearSearch } from './linear-search-actions';\r\nimport { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { interpolationSearch } from './interpolation-search.action';\r\nimport { exponentialSearch } from './exponenital-search-action';\r\nimport { fibonacciSearch } from './fibonacci-search-actions';\r\nexport const searchElement = (\r\n  array,\r\n  element,\r\n  dispatch,\r\n  type,\r\n  operationSpeed\r\n) => {\r\n  let newArray = array.map((item) => ({\r\n    num: item.num,\r\n    visited: false,\r\n    result: false,\r\n  }));\r\n  dispatch(setItem(newArray, type));\r\n  if (type === ALGORITHMS_CONSTANTS.linearSearch) {\r\n    linearSearch(newArray, element, dispatch, operationSpeed);\r\n  } else if (type === ALGORITHMS_CONSTANTS.binarySearch) {\r\n    binarySearch(newArray, element, dispatch, operationSpeed);\r\n  } else if (type === ALGORITHMS_CONSTANTS.jumpSearch) {\r\n    jumpSearch(newArray, element, dispatch, operationSpeed);\r\n  } else if (type === ALGORITHMS_CONSTANTS.interpolationSearch) {\r\n    interpolationSearch(newArray, element, dispatch, operationSpeed);\r\n  } else if (type === ALGORITHMS_CONSTANTS.exponentialSearch) {\r\n    exponentialSearch(newArray, element, dispatch, operationSpeed);\r\n  } else {\r\n    fibonacciSearch(newArray, element, dispatch, operationSpeed);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst increasingHeightKeyFrame = (height) => keyframes`\r\n    0% { height: 0px; }\r\n    100% { height: ${height}px }\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  grid-row-start: 1;\r\n  grid-row-end: 75;\r\n  border-radius: 5px 5px 5px 5px;\r\n  padding-top: 7px;\r\n  font-family: sans-serif;\r\n  font-weight: 100;\r\n  display: inline-block;\r\n  color: transparent;\r\n  background-color: ${({ backgroundColor }) => backgroundColor};\r\n  height: ${(props) => props.height + 'px'};\r\n  animation: ${(props) => increasingHeightKeyFrame(props.height)};\r\n  animation-duration: 1s;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst BarComponent = ({ title, height, backgroundColor, onClick, ...s }) => {\r\n  return (\r\n    <Bar\r\n      className=\"transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110\"\r\n      title={title}\r\n      height={height}\r\n      backgroundColor={backgroundColor}\r\n      onClick={(e) => onClick(e)}\r\n    ></Bar>\r\n  );\r\n};\r\n\r\nexport default BarComponent;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchElement } from '../../redux/algorithm-actions/searching-action';\r\nimport BarComponent from '../bar/bar';\r\n\r\nconst getBackgroundElement = (visited, result) => {\r\n  if (visited && result) {\r\n    return '#8bcf0c';\r\n  }\r\n  if (visited) {\r\n    return '#0c9ecf';\r\n  }\r\n  return '#181e54';\r\n};\r\n\r\nconst SearchVisualizer = ({\r\n  items,\r\n  findElement,\r\n  currentAlgo,\r\n  arrayLength,\r\n  operationSpeed,\r\n}) => {\r\n  const classChart = `grid grid-cols-${arrayLength.length - 1} gap-2`;\r\n  return (\r\n    <div className={classChart}>\r\n      {items.map(({ num, visited, result }, idx) => {\r\n        const backgroundColor = getBackgroundElement(visited, result);\r\n        return (\r\n          <BarComponent\r\n            key={idx}\r\n            title={num}\r\n            height={num}\r\n            backgroundColor={backgroundColor}\r\n            onClick={(e) =>\r\n              findElement(e.target.title, items, currentAlgo, operationSpeed)\r\n            }\r\n          >\r\n            {num}\r\n          </BarComponent>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProp = ({\r\n  algorithm: { currentAlgo, items },\r\n  operation: { arrayLength, operationSpeed },\r\n}) => {\r\n  return {\r\n    currentAlgo,\r\n    items,\r\n    arrayLength,\r\n    operationSpeed,\r\n  };\r\n};\r\n\r\nconst mapDispatchToPros = () => (dispatch) => ({\r\n  findElement: async (element, arr, currentAlgo, operationSpeed) =>\r\n    await searchElement(arr, element, dispatch, currentAlgo, operationSpeed),\r\n});\r\nexport default connect(mapStateToProp, mapDispatchToPros)(SearchVisualizer);\r\n","import React from 'react';\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux';\r\nimport { setAlgo } from '../../redux/algorithm-selector-reducer/algorithm-selector-actions';\r\nconst HeaderComponent = ({ algorithms, setAlgoDispatch, arrayLength }) => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Algo-viz</Navbar.Brand>\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title=\"Select Algorithm\" id=\"collasible-nav-dropdown\">\r\n            {algorithms.map((val, idx) => (\r\n              <NavDropdown.Item\r\n                key={idx}\r\n                title={val}\r\n                onClick={(e) => setAlgoDispatch(e, arrayLength)}\r\n              >\r\n                {val}\r\n              </NavDropdown.Item>\r\n            ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProp = ({ operation: { arrayLength } }) => {\r\n  return {\r\n    arrayLength,\r\n  };\r\n};\r\n\r\nconst mapDispatchToPros = () => (dispatch) => ({\r\n  setAlgoDispatch: (e, arrayLength) =>\r\n    dispatch(setAlgo(e.target.title, parseInt(arrayLength))),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToPros)(HeaderComponent);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAlgorithmsDescription } from '../../constants/constant';\r\n\r\nconst InformationBarComponent = ({ currentAlgo, children, complexity }) => {\r\n  return (\r\n    <div className=\"border mt-3\">\r\n      <div className=\"p-4\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <h5 className=\"text-lg text-gray-500 font-bold tracking-widest mb-2 uppercase text-left\">\r\n              {currentAlgo}\r\n            </h5>\r\n          </div>\r\n          <div className=\"grid-rows-3\">\r\n            {getAlgorithmsDescription(currentAlgo).map((item, idx) => (\r\n              <div key={idx}>\r\n                <h5 className=\"text-lg text-gray-500 font-bold tracking-widest mb-2 text-right\">\r\n                  {item}\r\n                </h5>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProp = ({ algorithm: { currentAlgo } }) => {\r\n  return { currentAlgo };\r\n};\r\n\r\nexport default connect(mapStateToProp, null)(InformationBarComponent);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nconst StatusComponent = ({ isRunning }) => {\r\n  return (\r\n    <span className=\"relative inline-flex rounded-md shadow-sm\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"inline-flex items-center px-4 py-2 border border-purple-400 text-base leading-6 font-medium rounded-md text-purple-800 bg-white hover:text-purple-700 focus:border-purple-300 transition ease-in-out duration-150\"\r\n      >\r\n        {getStatusAsPerIsRunning(isRunning)}\r\n      </button>\r\n      {isRunning === -1 ? (\r\n        <span className=\"flex absolute h-3 w-3 top-0 right-0 -mt-1 -mr-1\">\r\n          <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-purple-400 opacity-75\"></span>\r\n          <span className=\"relative inline-flex rounded-full h-3 w-3 bg-purple-500\"></span>\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst getStatusAsPerIsRunning = (isRunning) => {\r\n  if (isRunning === 0) {\r\n    return 'Select an item';\r\n  } else if (isRunning === 1) {\r\n    return 'Item found';\r\n  } else if (isRunning === -1) {\r\n    return 'Searching';\r\n  }\r\n};\r\n\r\nconst mapStateToProp = ({ algorithm: { isRunning } }) => {\r\n  return {\r\n    isRunning,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProp, null)(StatusComponent);\r\n","import React from 'react';\r\n\r\nconst SliderComponent = ({ min, max, value, onChange }) => {\r\n  return (\r\n    <p className=\"range-field\">\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        step=\"1\"\r\n        max={max}\r\n        value={value}\r\n        onChange={(e) => onChange(e)}\r\n      />\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default SliderComponent;\r\n","import React from 'react';\r\nimport SliderComponent from '../slider/slider';\r\n\r\nconst SliderToolBarComponent = ({ max, min, sliderName, onChange, value }) => {\r\n  return (\r\n    <div className=\"grid-rows-2\">\r\n      <div>{sliderName}</div>\r\n      <div>\r\n        <SliderComponent\r\n          max={max}\r\n          min={min}\r\n          onChange={onChange}\r\n          value={value}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderToolBarComponent;\r\n","export const ArrayActionTypes = {\r\n  SET_ARRAY_LENGTH: 'SET_ARRAY_LENGTH',\r\n  SET_OPERATION_SPEED: 'SET_OPERATION_SPEED',\r\n};\r\n","import React from 'react';\r\nimport SliderToolBarComponent from '../slider-toolbar/slider-toolbar';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setArrayLength,\r\n  setOperationSpeed,\r\n} from '../../redux/array/array-actions';\r\nimport { setItem } from '../../redux/algorithm-selector-reducer/algorithm-selector-actions';\r\nimport { getElementsAsPerAlgorithm } from '../../utils/utility';\r\n\r\nconst ArrayToolBarComponent = ({\r\n  dispatchArrayLength,\r\n  dispatchOperationSpeed,\r\n  currentAlgo,\r\n  operationSpeed,\r\n  arrayLength,\r\n}) => {\r\n  return (\r\n    <div className=\"grid grid-cols-2\">\r\n      <SliderToolBarComponent\r\n        sliderName=\"Change Array Size\"\r\n        max=\"30\"\r\n        min=\"10\"\r\n        step=\"1\"\r\n        value={arrayLength}\r\n        onChange={(e) => dispatchArrayLength(currentAlgo, e.target.value)}\r\n      />\r\n      <SliderToolBarComponent\r\n        sliderName=\"Speed\"\r\n        max=\"-1\"\r\n        min=\"-3\"\r\n        step=\"1\"\r\n        value={operationSpeed}\r\n        onChange={(e) => dispatchOperationSpeed(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = () => (dispatch) => ({\r\n  dispatchArrayLength: (currentAlgo, value) => {\r\n    dispatch(\r\n      setItem(getElementsAsPerAlgorithm(currentAlgo, value), currentAlgo)\r\n    );\r\n\r\n    dispatch(setArrayLength(currentAlgo, parseInt(value)));\r\n  },\r\n\r\n  dispatchOperationSpeed: (value) =>\r\n    dispatch(setOperationSpeed(parseInt(value))),\r\n});\r\n\r\nconst mapStateToProp = ({\r\n  algorithm: { currentAlgo },\r\n  operation: { arrayLength, operationSpeed },\r\n}) => {\r\n  return {\r\n    currentAlgo,\r\n    arrayLength,\r\n    operationSpeed,\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProp,\r\n  mapDispatchToProps\r\n)(ArrayToolBarComponent);\r\n","import { getElementsAsPerAlgorithm } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\nimport { ArrayActionTypes } from './array-types';\r\n\r\nexport const setArrayLength = (algorithm, arrayLength) => {\r\n  return {\r\n    type: ArrayActionTypes.SET_ARRAY_LENGTH,\r\n    payload: {\r\n      items: arrayLength,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setOperationSpeed = (content) => {\r\n  return {\r\n    type: ArrayActionTypes.SET_OPERATION_SPEED,\r\n    payload: {\r\n      operationSpeed: content,\r\n    },\r\n  };\r\n};\r\n","import './App.css';\nimport React from 'react';\nimport SearchVisualizer from './components/search-visualizer/search-visualizer';\nimport HeaderComponent from './components/header/header';\nimport { algorithms } from './constants/constant';\nimport InformationBarComponent from './components/information-bar/information-bar';\nimport StatusComponent from './components/status/status';\nimport ArrayToolBarComponent from './components/array-toolbar/array-toolbar';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderComponent algorithms={algorithms()} />\n      <div className=\"container\">\n        <ArrayToolBarComponent />\n        <InformationBarComponent>\n          <SearchVisualizer />\n          <StatusComponent />\n        </InformationBarComponent>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ALGORITHMS_CONSTANTS } from '../../constants/constant';\r\nimport { getElementsAsPerAlgorithm } from '../../utils/utility';\r\nimport { AlgorithmActionTypes } from './algorithm-selector-types';\r\n\r\nconst INITIAL_STATE = {\r\n  currentAlgo: ALGORITHMS_CONSTANTS.linearSearch,\r\n  error: null,\r\n  items: getElementsAsPerAlgorithm('linear-search'),\r\n  isRunning: 0,\r\n};\r\n\r\nconst algoReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case AlgorithmActionTypes.SET_BINARY_SEARCH:\r\n    case AlgorithmActionTypes.SET_LINEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        items: action.payload.items,\r\n        currentAlgo: action.payload.currentAlgo,\r\n        isRunning: action.payload.isRunning,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default algoReducer;\r\n","import { ArrayActionTypes } from './array-types';\r\nconst INITIAL_STATE = {\r\n  arrayLength: 10,\r\n  operationSpeed: -3,\r\n};\r\n\r\nconst arrayReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ArrayActionTypes.SET_ARRAY_LENGTH:\r\n      return {\r\n        ...state,\r\n        arrayLength: action.payload.items,\r\n      };\r\n    case ArrayActionTypes.SET_OPERATION_SPEED:\r\n      return {\r\n        ...state,\r\n        operationSpeed: action.payload.operationSpeed,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default arrayReducer;\r\n","import { combineReducers } from 'redux';\r\nimport algoReducer from './algorithm-selector-reducer/algorithm-selector-reducer';\r\nimport arrayReducer from './array/array-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  algorithm: algoReducer,\r\n  operation: arrayReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import logger from 'redux-logger';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './root-reducer';\r\nimport thunk from 'redux-thunk';\r\nlet middlewares = [thunk];\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}