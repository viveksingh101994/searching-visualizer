{"version":3,"sources":["redux/algorithm-selector-reducer/alogrithm-selector-types.js","utils/utility.js","utils/math.js","redux/algorithm-selector-reducer/algorithm-selector-actions.js","redux/algorithm-actions/binary-search-actions.js","redux/algorithm-actions/linear-search-actions.js","redux/algorithm-actions/searching-action.js","components/search-visualizer/search-visualizer.jsx","components/header/header.jsx","App.js","redux/algorithm-selector-reducer/algorithm-selector-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["AlgorithmActionTypes","Algorithms","getElementsAsPerAlgorithm","algorithm","min","max","array","i","push","num","Math","floor","random","visited","result","sort","a","b","timer","ms","Promise","res","setTimeout","setItem","content","currentAlgo","type","payload","items","binarySearch","elementToSearch","dispatch","start","end","length","mid","midItem","parseInt","linearSearch","searchElement","element","newArray","map","item","connect","findElement","arr","console","log","className","idx","backgroundColor","getBackgroundElement","title","style","height","cursor","onClick","e","target","setAlgo","algorithms","Navbar","bg","variant","Brand","href","Collapse","id","Nav","NavDropdown","val","Item","App","INITIAL_STATE","error","algoReducer","state","action","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90f1bdde.chunk.js","sourcesContent":["export const AlgorithmActionTypes = {\r\n  SET_BINARY_SEARCH: 'SET_BINARY_SEARCH',\r\n  SET_LINEAR_SEARCH: 'SET_LINEAR_SEARCH',\r\n};\r\n\r\nexport const Algorithms = {\r\n  linearSearch: 'linear-search',\r\n  binarySearch: 'binary-search',\r\n};\r\n","import { Algorithms } from '../redux/algorithm-selector-reducer/alogrithm-selector-types';\r\nimport { randomNumberGenerator } from './math';\r\n\r\nexport const getElementsAsPerAlgorithm = (algorithm) => {\r\n  const array = [];\r\n  for (let i = 0; i <= 10; i += 1) {\r\n    array.push({\r\n      num: randomNumberGenerator(5, 500),\r\n      visited: false,\r\n      result: false,\r\n    });\r\n  }\r\n  if (algorithm === Algorithms.binarySearch) {\r\n    array.sort((a, b) => a.num - b.num);\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const timer = (ms) => new Promise((res) => setTimeout(res, ms));\r\n","export const randomNumberGenerator = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1) + min);\r\n","import { getElementsAsPerAlgorithm } from '../../utils/utility';\r\nimport { AlgorithmActionTypes } from './alogrithm-selector-types';\r\n\r\nexport const setAlgo = (content) => {\r\n  return {\r\n    type: AlgorithmActionTypes.SET_LINEAR_SEARCH,\r\n    payload: {\r\n      items: getElementsAsPerAlgorithm(content),\r\n      currentAlgo: content,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setItem = (content, currentAlgo) => {\r\n  return {\r\n    type: AlgorithmActionTypes.SET_LINEAR_SEARCH,\r\n    payload: {\r\n      items: [...content],\r\n      currentAlgo: currentAlgo,\r\n    },\r\n  };\r\n};\r\n","import { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\nimport { Algorithms } from '../algorithm-selector-reducer/alogrithm-selector-types';\r\n\r\nexport const binarySearch = async (array, elementToSearch, dispatch) => {\r\n  let items = [...array];\r\n  let start = 0,\r\n    end = items.length - 1;\r\n  while (start <= end) {\r\n    let mid = Math.floor((start + end) / 2);\r\n    let midItem = { ...items[mid] };\r\n    midItem.visited = true;\r\n    items[mid] = midItem;\r\n    await timer(1000);\r\n    dispatch(setItem(items, Algorithms.binarySearch));\r\n    if (items[mid].num === parseInt(elementToSearch)) {\r\n      midItem.result = true;\r\n      items[mid] = midItem;\r\n      await timer(1000);\r\n      dispatch(setItem(items, Algorithms.binarySearch));\r\n      break;\r\n    } else if (items[mid].num < parseInt(elementToSearch)) {\r\n      start = mid + 1;\r\n    } else {\r\n      end = mid - 1;\r\n    }\r\n  }\r\n  await timer(1000);\r\n  dispatch(setItem(items, Algorithms.binarySearch));\r\n};\r\n","import { timer } from '../../utils/utility';\r\nimport { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\nimport { Algorithms } from '../algorithm-selector-reducer/alogrithm-selector-types';\r\n\r\nexport const linearSearch = async (array, elementToSearch, dispatch) => {\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (parseInt(elementToSearch) === array[i].num) {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: true,\r\n      };\r\n      break;\r\n    } else {\r\n      array[i] = {\r\n        num: array[i].num,\r\n        visited: true,\r\n        result: false,\r\n      };\r\n    }\r\n    await timer(1000);\r\n\r\n    dispatch(setItem(array, Algorithms.linearSearch));\r\n  }\r\n  await timer(1000);\r\n\r\n  dispatch(setItem(array, Algorithms.linearSearch));\r\n};\r\n","import { setItem } from '../algorithm-selector-reducer/algorithm-selector-actions';\r\nimport { Algorithms } from '../algorithm-selector-reducer/alogrithm-selector-types';\r\nimport { binarySearch } from './binary-search-actions';\r\nimport { linearSearch } from './linear-search-actions';\r\n\r\nexport const searchElement = (array, element, dispatch, type) => {\r\n  let newArray = array.map((item) => ({\r\n    num: item.num,\r\n    visited: false,\r\n    result: false,\r\n  }));\r\n  dispatch(setItem(newArray, type));\r\n  if (type === Algorithms.linearSearch) {\r\n    linearSearch(newArray, element, dispatch);\r\n  } else {\r\n    binarySearch(newArray, element, dispatch);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './search-visualizer.css';\r\nimport { connect } from 'react-redux';\r\nimport { searchElement } from '../../redux/algorithm-actions/searching-action';\r\n\r\nconst getBackgroundElement = (visited, result) => {\r\n  if (visited && result) {\r\n    return '#8bcf0c';\r\n  }\r\n  if (visited) {\r\n    return '#0c9ecf';\r\n  }\r\n  return '#181e54';\r\n};\r\n\r\nconst SearchVisualizer = ({ items, findElement, currentAlgo }) => {\r\n  console.log(items);\r\n  return (\r\n    <div>\r\n      <div className=\"chart\">\r\n        {items.map(({ num, visited, result }, idx) => {\r\n          const backgroundColor = getBackgroundElement(visited, result);\r\n          return (\r\n            <div\r\n              key={idx}\r\n              className=\"bar\"\r\n              title={num}\r\n              style={{\r\n                height: `${num}px`,\r\n                backgroundColor,\r\n                cursor: 'pointer',\r\n              }}\r\n              onClick={(e) => findElement(e.target.title, items, currentAlgo)}\r\n            >\r\n              {num}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProp = ({ algorithm: { currentAlgo, items } }) => {\r\n  return {\r\n    currentAlgo,\r\n    items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToPros = () => (dispatch) => ({\r\n  findElement: async (element, arr, currentAlgo) =>\r\n    await searchElement(arr, element, dispatch, currentAlgo),\r\n});\r\nexport default connect(mapStateToProp, mapDispatchToPros)(SearchVisualizer);\r\n","import React from 'react';\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux';\r\nimport { setAlgo } from '../../redux/algorithm-selector-reducer/algorithm-selector-actions';\r\nconst HeaderComponent = ({ algorithms, setAlgo }) => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Searching Algo-visualizer</Navbar.Brand>\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title=\"Select Algorithm\" id=\"collasible-nav-dropdown\">\r\n            {algorithms.map((val, idx) => (\r\n              <NavDropdown.Item key={idx} title={val} onClick={setAlgo}>\r\n                {val}\r\n              </NavDropdown.Item>\r\n            ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToPros = () => (dispatch) => ({\r\n  setAlgo: (e) => dispatch(setAlgo(e.target.title)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToPros)(HeaderComponent);\r\n","import './App.css';\nimport React from 'react';\nimport SearchVisualizer from './components/search-visualizer/search-visualizer';\nimport HeaderComponent from './components/header/header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderComponent algorithms={['linear-search', 'binary-search']} />\n      <SearchVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import { getElementsAsPerAlgorithm } from '../../utils/utility';\r\nimport { AlgorithmActionTypes } from './alogrithm-selector-types';\r\n\r\nconst INITIAL_STATE = {\r\n  currentAlgo: 'linear-search',\r\n  error: null,\r\n  items: getElementsAsPerAlgorithm('linear-search'),\r\n};\r\n\r\nconst algoReducer = (state = INITIAL_STATE, action) => {\r\n  console.log('action', action);\r\n  switch (action.type) {\r\n    case AlgorithmActionTypes.SET_BINARY_SEARCH:\r\n    case AlgorithmActionTypes.SET_LINEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        items: action.payload.items,\r\n        currentAlgo: action.payload.currentAlgo,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default algoReducer;\r\n","import { combineReducers } from 'redux';\r\nimport algoReducer from './algorithm-selector-reducer/algorithm-selector-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  algorithm: algoReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import logger from 'redux-logger';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './root-reducer';\r\nimport thunk from 'redux-thunk';\r\nlet middlewares = [thunk];\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}